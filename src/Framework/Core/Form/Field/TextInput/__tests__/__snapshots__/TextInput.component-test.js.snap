// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components <TextInputComponent /> renders text input component correctly 1`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="fixedLabelExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 2`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="secretExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 3`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="clearExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 4`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="placeHolderExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 5`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="headerExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 6`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="multilineExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 7`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="objectLebelExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;

exports[`components <TextInputComponent /> renders text input component correctly 8`] = `
<TextInputComponent
  category="field"
  clearButton={false}
  defaultText={null}
  headerLabel={null}
  hiddenText={null}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "defaultText": "Default Text",
        "footDescription": "Foot Description",
        "headerLabel": "Header Label",
        "label": "Label",
        "title": "Text Input",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  label={null}
  multiline={false}
  type="text"
  uid="objectDefaultTextExample"
  value={null}
>
  <Styled(Item)
    stackedLabel={false}
  >
    <Item
      stackedLabel={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={1}
        focusedOpacity={0.7}
        stackedLabel={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 2,
          }
        }
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 0,
                "borderRightWidth": 0,
                "borderTopWidth": 0,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#D9D5DC",
                  "borderLeftWidth": 0,
                  "borderRightWidth": 0,
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginLeft": 2,
                  "opacity": 1,
                }
              }
            >
              <Styled(Input)
                multiline={false}
                onChangeText={[Function]}
                onContentSizeChange={[Function]}
                placeholder={null}
                secureTextEntry={null}
                style={
                  Object {
                    "height": undefined,
                  }
                }
                value={null}
              >
                <Input
                  multiline={false}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  placeholder={null}
                  secureTextEntry={null}
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 17,
                      "height": 50,
                      "lineHeight": 24,
                      "paddingLeft": 5,
                      "paddingRight": 5,
                      "top": 1.5,
                    }
                  }
                  value={null}
                >
                  <TextInput
                    editable={true}
                    multiline={false}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    placeholder={null}
                    placeholderTextColor="#575757"
                    secureTextEntry={null}
                    style={
                      Object {
                        "color": "#000",
                        "flex": 1,
                        "fontSize": 17,
                        "height": 50,
                        "lineHeight": 24,
                        "paddingLeft": 5,
                        "paddingRight": 5,
                        "top": 1.5,
                      }
                    }
                    underlineColorAndroid="rgba(0,0,0,0)"
                    value={null}
                  >
                    <TextInput
                      editable={true}
                      multiline={false}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      placeholder={null}
                      placeholderTextColor="#575757"
                      secureTextEntry={null}
                      style={
                        Object {
                          "color": "#000",
                          "flex": 1,
                          "fontSize": 17,
                          "height": 50,
                          "lineHeight": 24,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "top": 1.5,
                        }
                      }
                      underlineColorAndroid="rgba(0,0,0,0)"
                      value={null}
                    />
                  </TextInput>
                </Input>
              </Styled(Input)>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </Item>
  </Styled(Item)>
</TextInputComponent>
`;
